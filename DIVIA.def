BootStrap: docker
From: ubuntu:latest

%apprun Rscript
  exec Rscript "${@}"

%post
    # apt-get update    
    # apt-get install -y unzip 
    # apt-get install -y git

   # Install python2    
     apt-get update && \
     apt-get install -y python2 python2-minimal dh-python
     cd /usr/bin/ && \
     ln -s python2 python &&
     cd ~

    # apt-get install -y python python-dev python-numpy python-biopython python-xlrd python-openpyxl

    ## Install R
    export R_VERSION=4.2.2
    echo "export R_VERSION=${R_VERSION}" >> $SINGULARITY_ENVIRONMENT
    
    # Get dependencies
    apt --fix-broken install  
    apt-get update
    apt-get upgrade -y
    apt-get install -y --no-install-recommends \
     locales

    # Configure default locale
    echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen
    locale-gen en_US.utf8
    /usr/sbin/update-locale LANG=en_US.UTF-8
    export LC_ALL=en_US.UTF-8
    export LANG=en_US.UTF-8

    ##install perl module
    apt-get install -y cmake unzip bzip2 tar gzip pigz
    ## cpan App::cpanminus && \
    ## cpan install DB_File URI::Escape Set::IntervalTree Carp::Assert JSON::XS PerlIO::gzip
    ## apt-get -y install cpanminus && \
    ## cpan install JSON::XS URI::Escape Carp::Assert
    ## cpan install PerlIO::gzip && \
    ##cpanm --force install Carp::Assert && \
    ## cpan install Set::IntervalTree && \
    ## cpanm --force install URI::Escape
    ## cpan install DB_File
       
    apt-get update --fix-missing
    apt-get install -y --no-install-recommends \
    software-properties-common \
    dirmngr \
    wget \
    apt-utils

   wget -qO- https://cloud.r-project.org/bin/linux/ubuntu/marutter_pubkey.asc | \
    tee -a /etc/apt/trusted.gpg.d/cran_ubuntu_key.asc
   add-apt-repository \
    "deb https://cloud.r-project.org/bin/linux/ubuntu $(lsb_release -cs)-cran40/"
   
    apt-get install -y --no-install-recommends \
    r-base=${R_VERSION}* 

  apt-get install -y --no-install-recommends \
    r-base-core=${R_VERSION}* 
  
  apt-get install -y --no-install-recommends \
    r-base-dev=${R_VERSION}* 
  
  apt-get install -y --no-install-recommends \
    r-base-html=${R_VERSION}* 
  
  apt-get install -y --no-install-recommends \
    r-doc-html=${R_VERSION}* 


 apt-get install -y --no-install-recommends \
    libcurl4-openssl-dev \
    libssl-dev \
    libxml2-dev \
    libcairo2-dev \
    libxt-dev \
    libopenblas-dev \
    python3 \
    python3-pip \
    nano \
    vim \
    git \
    curl
   
    apt-get install -y\
    libharfbuzz-dev \
    libfribidi-dev

    apt-get install -y libfreetype6-dev
    apt-get install -y libpng-dev
    apt-get install -y libtiff5-dev
    apt-get install -y libjpeg-dev
 
    echo "options(repos = c(CRAN = 'https://cran.rstudio.com/'), download.file.method = 'libcurl')" >> /usr/lib/R/etc/Rprofile.site

    # Add a directory for host R libraries
    mkdir -p /library
    echo "R_LIBS_SITE=/library:\${R_LIBS_SITE}" >> /usr/lib/R/etc/Renviron.site
    
     mkdir tools
     wget -qO tools/quarto-1.2.94-linux-amd64.deb https://github.com/quarto-dev/quarto-cli/releases/download/v1.2.94/quarto-1.2.94-linux-amd64.deb
     dpkg -i tools/quarto-1.2.94-linux-amd64.deb
     quarto tools install tinytex  
     quarto tools install chromium

    # Now that we have all the required package, update to the github version
    git clone https://github.com/quarto-dev/quarto-cli
    cd quarto-cli
    ./configure.sh
     cd ~

    #Install needed R packages
    R --slave -e 'install.packages("pak", repos = "https://r-lib.github.io/p/pak/dev/")'
    R --slave -e 'install.packages("BiocManager")'
    EXP="pak::pkg_install(c('devtools','ranger','multiclassPairs','mclust','preprocessCore','DESeq2','patchwork','pheatmap','switchBox','Rtsne','GGally','limma','ggrepel','cli','logger','openxlsx','fs','funr','readxl','readr','glue','tidyverse', 'rtracklayer','argparse','ggplot2','ggsci','formattable','circlize', 'kableExtra','logger','bookdown','bs4Dash', 'gt','pingr','trackViewer','csaw','tryCatchLog','reshape2','genomation','pander', 'BSgenome.Mmusculus.UCSC.mm10','BSgenome.Hsapiens.UCSC.hg38','TxDb.Mmusculus.UCSC.mm9.knownGene', 'TxDb.Mmusculus.UCSC.mm10.knownGene','org.Mm.eg.db','TxDb.Hsapiens.UCSC.hg19.knownGene','TxDb.Hsapiens.UCSC.hg38.knownGene', 'org.Hs.eg.db','TxDb.Scerevisiae.UCSC.sacCer3.sgdGene', 'org.Sc.sgd.db'))"  
    # EXP="pak::pkg_install(c('devtools','cli','logger','openxlsx','fs','funr','readxl','readr','glue','tidyverse', 'rtracklayer','argparse','ggplot2','ggsci','formattable','circlize', 'kableExtra','logger','bookdown','bs4Dash','gt','pingr','trackViewer','csaw','tryCatchLog','reshape2','genomation','pander'))"  
    R -e "$EXP"
    R --slave -e 'devtools::install_github("sirusb/kableExtra")'
    Rscript -e 'devtools::install_github(repo = "honzee/RNAseqCNV")'

    # Install python packages
    pip install matplotlib plotly_express click pandas rich seaborn scikit-learn openpyxl xlsxwriter xlrd jupyter jupyterlab jupyter-cache 
   
    ## autoheaders
    pip3 install autoheaders
    
    ## g++ JAVA zlib
    apt-get update && \
    apt-get install -y build-essential openjdk-8-jdk 

    ## autoconfig
    apt-get install -y automake autotools-dev libsigsegv2 m4 
    apt-get install -y autoconf
     
    # Clean up
    # rm -rf /var/lib/apt/lists/*
    # rm -rf /tmp/Rtmp*
    echo "unset XDG_RUNTIME_DIR" >> ~/.bashrc
        
    # apt-get install -y cmake unzip bzip2 tar gzip pigz
     
    ## htslib
    cd /usr/local && \
    git clone --recurse-submodules https://github.com/samtools/htslib.git && \
    cd htslib && \
    autoreconf -i && \
    ./configure && make && make install

    ## samtools
    cd /usr/local && \
    git clone --recurse-submodules https://github.com/samtools/samtools.git && \
    cd samtools && \
    autoheader && \
    autoconf -Wno-syntax && \
    ./configure && make && make install

    ## install tabix
    cd /usr/local/ &&
    wget --no-check-certificate https://sourceforge.net/projects/samtools/files/tabix/tabix-0.2.6.tar.bz2 && tar jxvf tabix-0.2.6.tar.bz2 && cd tabix-0.2.6 && make && cp bgzip tabix /usr/local/bin/ && rm /usr/local/tabix-0.2.6.tar.bz2   

    ## install cutadapt
    python3 -m pip install cutadapt

    ## trim_galore   
    cd /usr/local && \
    wget -q https://github.com/FelixKrueger/TrimGalore/archive/0.6.6.tar.gz -O trim_galore.tar.gz && \
    tar xzf trim_galore.tar.gz && \
    ln -s /usr/local/TrimGalore-0.6.6/trim_galore /usr/local/bin/trim_galore && \
    rm trim_galore.tar.gz

    ## fastqc
    cd /usr/local && \
    wget -q https://www.bioinformatics.babraham.ac.uk/projects/fastqc/fastqc_v0.11.9.zip && \
    unzip fastqc_v0.11.9.zip && \
    chmod 775 /usr/local/FastQC/fastqc && \
    ln -s /usr/local/FastQC/fastqc /usr/local/bin/fastqc && \
    rm fastqc_v0.11.9.zip    

    ## gatk-4.1.8   
    cd /usr/local && \
    wget -q https://github.com/broadinstitute/gatk/releases/download/4.1.8.0/gatk-4.1.8.0.zip && \
    unzip gatk-4.1.8.0.zip && \
    ln -s /usr/local/gatk-4.1.8.0/gatk /usr/local/bin/gatk && \
    rm gatk-4.1.8.0.zip    

    ## STAR-2.7.9a
    cd /usr/local && \
    wget -q https://github.com/alexdobin/STAR/archive/refs/tags/2.7.9a.tar.gz -O star.tar.gz && \
    tar xzf star.tar.gz && \
    cd STAR-2.7.9a/source && \
    make STAR && \
    cp STAR /usr/local/bin && \
    rm /usr/local/star.tar.gz

    ## RSEM
    cd /usr/local && \
    wget https://github.com/deweylab/RSEM/archive/v1.3.3.tar.gz && \
    tar xzf v1.3.3.tar.gz && \
    cd RSEM-1.3.3 && \
    make && make install

    ## arriba-2.3.0
    cd /usr/local && \
    wget -q https://github.com/suhrig/arriba/releases/download/v2.3.0/arriba_v2.3.0.tar.gz && \
    tar -xzf arriba_v2.3.0.tar.gz && \
    cd arriba_v2.3.0 && \
    make && \
    rm /usr/local/arriba_v2.3.0.tar.gz

    ## Install perl modules for STAR-Fusion
    apt-get -y install cpanminus && \
    cpan install JSON::XS URI::Escape Carp::Assert 

    ## STAR-Fusion
    cd /usr/local && \
    wget -q https://github.com/STAR-Fusion/STAR-Fusion/releases/download/v1.6.0/STAR-Fusion-v1.6.0.FULL.tar.gz && \
    tar -xzf STAR-Fusion-v1.6.0.FULL.tar.gz && \
    cd STAR-Fusion-v1.6.0 && \
    make && \
    rm /usr/local/STAR-Fusion-v1.6.0.FULL.tar.gz

    # install STAR-Fusion v1.11.1
    ## git clone --recursive https://github.com/STAR-Fusion/STAR-Fusion.git && \
    ## cd STAR-Fusion && \
    ## make

%runscript
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# this text code will run whenever the container
# is called as an executable or with `singularity run`

%environment
   export LC_ALL=C
   export R_LIBS=/library:/usr/local/lib/R/site-library:/usr/lib/R/site-library:/usr/lib/R/library
   export PATH=/usr/local/arriba_v2.3.0:/usr/local/STAR-Fusion/ctat-genome-lib-builder:/usr/local/STAR-Fusion-v1.6.0:/usr/local/usr/local/RSEM-1.3.3:$PATH
  # export PATH=/usr/local/arriba_v2.3.0:/usr/local/STAR-Fusion/ctat-genome-lib-builder:/usr/local/STAR-Fusion:/usr/local/usr/local/RSEM-1.3.3:$PATH
